<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Note down something</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.pirrla.cn/"/>
  <updated>2017-03-21T05:58:30.000Z</updated>
  <id>http://www.pirrla.cn/</id>
  
  <author>
    <name>Alan Wong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://www.pirrla.cn/2017/03/20/Mastering_Social_Media_Mining_with_Python/"/>
    <id>http://www.pirrla.cn/2017/03/20/Mastering_Social_Media_Mining_with_Python/</id>
    <published>2017-03-20T08:11:07.000Z</published>
    <updated>2017-03-21T05:58:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>By Marco Bonzanini</p>
<h2 id="Python-tools-for-data-science"><a href="#Python-tools-for-data-science" class="headerlink" title="Python tools for data science"></a>Python tools for data science</h2><p>Pandas</p>
<p>Numpy</p>
<p>Scikit-learn</p>
<p>NLTK</p>
<p>Gensim</p>
<p>Pyro4</p>
<p>Networks</p>
<p>Matplotlib</p>
<p>wordcloud</p>
<h2 id="Twitter"><a href="#Twitter" class="headerlink" title="Twitter"></a>Twitter</h2><h2 id="Entity-Analysis"><a href="#Entity-Analysis" class="headerlink" title="Entity Analysis"></a>Entity Analysis</h2><p>1.Count the hashtags frenquency</p>
<p>2.Count the tweets with hashtags or without hashtags and count the number of hashtags in one tweet</p>
<p>3.Count the occurancy of people mention</p>
<h2 id="Text-Analysis"><a href="#Text-Analysis" class="headerlink" title="Text Analysis"></a>Text Analysis</h2><p>1.lowercase the texts</p>
<p>2.Tokenization</p>
<p> use NLTK.TweetTokenizer() to </p>
<p>3.remove the stop words</p>
<p>4.remove digits</p>
<p> Count the occrance of words</p>
<h2 id="Time-Series-Analysis"><a href="#Time-Series-Analysis" class="headerlink" title="Time Series Analysis"></a>Time Series Analysis</h2><p>Plot the figure with different timeslot</p>
<p>Normalize the time</p>
<p>For example from 15:13-15:14 all of them add to together</p>
<h2 id="Text-analysis-and-TF-IDF-on-notes"><a href="#Text-analysis-and-TF-IDF-on-notes" class="headerlink" title="Text analysis and TF-IDF on notes"></a>Text analysis and TF-IDF on notes</h2><p>TF = Term Frequency</p>
<p>frequency in a document, can be normalized by the length of the document</p>
<p>IDF = Inverse Document Frequency</p>
<p>1+log(N/n)  N means the total number of words, the n mean this word’s occrance in each document</p>
<p>TF-IDF = TF*IDF</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;By Marco Bonzanini&lt;/p&gt;
&lt;h2 id=&quot;Python-tools-for-data-science&quot;&gt;&lt;a href=&quot;#Python-tools-for-data-science&quot; class=&quot;headerlink&quot; title=&quot;Python t
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.pirrla.cn/2017/03/20/GitTutorial_ByLiaoxuefeng/"/>
    <id>http://www.pirrla.cn/2017/03/20/GitTutorial_ByLiaoxuefeng/</id>
    <published>2017-03-20T03:27:20.000Z</published>
    <updated>2017-03-23T12:39:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>Source:</p>
<p><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></p>
<h1 id="Git-Tutorial"><a href="#Git-Tutorial" class="headerlink" title="Git Tutorial"></a>Git Tutorial</h1><p>Download:</p>
<p>For Mac user, you can simply go to the offical website to download the package and install it.</p>
<p>Link:<a href="https://git-scm.com/downloads" target="_blank" rel="external">https://git-scm.com/downloads</a></p>
<p>在终端里面，使用</p>
<p>pwd</p>
<p>显示当前所在的目录地址</p>
<p>/Users/alan/git/learngit</p>
<p>使用</p>
<p>git init 创建一个新的仓库</p>
<p>修改：</p>
<p>git add 文件名（带后缀）</p>
<p>git commit -m “说明” </p>
<p>查看本地仓库状态</p>
<p>git status</p>
<p>查看修改在何处</p>
<p>git diff</p>
<p>查看修改日志</p>
<p>git log</p>
<p>美观可以改为</p>
<p>git log —pretty=oneline</p>
<p>返回上一次修改后的版本（每一个^返回一个版本）（HEAD 表示当前版本）</p>
<p>git reset —hard HEAD^</p>
<p>前进版本(hard 后面是版本号，从log中可以得出)</p>
<p>git reset —hard b3fe8e</p>
<p>找版本号可以</p>
<p>git reflog (命令日志)</p>
<p>从这里可以找到版本号</p>
<p>舍弃工作区的修改（返回add状态的版本或者最新commit的版本）</p>
<p>git checkout — readme.txt </p>
<p>舍弃缓存区的修改</p>
<p>git reset HEAD readme.txt</p>
<p>关联远程仓库(先有本地库再有远程库的时候才需要)</p>
<p>git remote add origin git@github.com:alanhuangym/learngit.git</p>
<p>把本地内容推送到远程仓库上（第一次加-u）</p>
<p>git push -u origin master</p>
<p>git push origin master</p>
<p>从远程库中下载到本地库中(会自动新建文件夹)</p>
<p>git clone git@github.com:alanhuangym/gitskills.git</p>
<p>分支：</p>
<p>查看分支</p>
<p>git branch</p>
<p>创建分支</p>
<p>git branch 分支名</p>
<p>切换分支</p>
<p>git checkout 分支名</p>
<p>在master下面合并分支</p>
<p>git merge 分支名</p>
<p>删除分支</p>
<p>git branch -d 分支名</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Source:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&quot; target=&quot;_blank&quot; rel=&quot;external
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.pirrla.cn/2017/03/20/Coursera-MachineLearningByAndrewNg/"/>
    <id>http://www.pirrla.cn/2017/03/20/Coursera-MachineLearningByAndrewNg/</id>
    <published>2017-03-20T03:23:21.000Z</published>
    <updated>2017-03-20T03:24:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>CourseHomePage:</p>
<p><a href="https://www.coursera.org/learn/machine-learning/home/" target="_blank" rel="external">https://www.coursera.org/learn/machine-learning/home/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CourseHomePage:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/machine-learning/home/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.courser
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.pirrla.cn/2017/03/20/Duality_of_Linear_Programming/"/>
    <id>http://www.pirrla.cn/2017/03/20/Duality_of_Linear_Programming/</id>
    <published>2017-03-20T02:42:54.000Z</published>
    <updated>2017-03-20T03:21:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>Resource:</p>
<p><strong>S´ebastien Lahaie, How to take the Dual of a Linear Program <a href="http://www.cs.columbia.edu/coms6998-3/lpprimer.pdf" target="_blank" rel="external">http://www.cs.columbia.edu/coms6998-3/lpprimer.pdf</a></strong></p>
<p>翻译：</p>
<p>Alan Huang</p>
<h1 id="如何求线性规划的二元性"><a href="#如何求线性规划的二元性" class="headerlink" title="如何求线性规划的二元性"></a>如何求线性规划的二元性</h1><ol>
<li><p>线性规划是最优解问题的一个公式化结果：通过设立目标函数和约束函数，求取目标方程的最大值或最小值。因目标函数是线性的，所以称之为线性规划。</p>
<p>通常，线性规划的一般形式是这样的：</p>
<p>max<br>x1≥0, x2≤0, x3<br>v1x1 + v2x2 + v3x3 (1)<br>such that </p>
<p>a1x1 + x2 + x3 ≤ b1 (2)<br>x1 + a2x2 = b2 (3)<br>a3x3 ≥ b3 (4)</p>
<p>(1)是目标函数，(2)(3)(4)是约束函数，目标是求取(1)的最大值</p>
<p>其中，x1,x2,x3是变量，而其他的参数则为常量（v1,v2,v3等）</p>
</li>
<li><p>这里我们称以上所述的线性规划为原始线性规划，二元性则是通过数学过程，从原始线性规划得到二次线性规划。</p>
</li>
<li><p>首先我们要重写原始线性规划的目标方程，使之成为一个标准形式。</p>
<p>为了简便计算，我们尽量将目标方程改写为求##最小值##的形式</p>
<p>从求最大值到求最小值也很简单，只需要将目标方程乘以-1即可</p>
<p>所以我们可以获得改写后的目标方程：</p>
<p>min<br>x1≥0, x2≤0, x3<br>−v1x1 − v2x2 − v3x3</p>
</li>
<li><p>第二步，是将约束函数全部改写为小于或小于等于或等于零的形式。即将(2)(3)(4)改写为：</p>
<p>a1x1 + x2 + x3 − b1 ≤ 0 (5)<br>x1 + a2x2 − b2 = 0 (6)<br>−a3x3 + b3 ≤ 0 (7)</p>
</li>
<li><p>第三步，为每一个不等式约束函数设定一个非负的二元性参数，为每一个等式约束函数设定一个二元性参数（无限制负或非负）。如上所述，我们分别为(5)(7)设定二元性参数λ1 ≥ 0 和 λ3 ≥ 0，为(6)设定 λ2。</p>
</li>
<li><p>第四步，将第三步设置的二元性参数与约束函数符号左边的部分相乘并将它们加入到目标函数之中，并在目标函数前面加上求最大值，即如下所示：</p>
<p>max min  −v1x1 − v2x2 − v3x3</p>
<p>+λ1 (a1x1 + x2 + x3 − b1) (8)</p>
<p>+λ2 (x1 + a2x2 − b2) (9)</p>
<p>+λ3 (−a3x3 + b3) (10)</p>
</li>
<li><p>第五步，将目标函数的括号拆开，并进行整理。将包含原本变量（x1,x2,x3）的式子下放到约束函数之中，其余的项放入目标函数之中。即:</p>
<p>max min  −b1λ1 − b2λ2 − b3λ3</p>
<p>+x1(a1λ1 + λ2 − v1) (11)</p>
<p>+x2(λ1 + a2λ2 − v2) (12)</p>
<p>+x3(λ1 − a3λ3 − v3) (13)</p>
</li>
<li><p>第六步，将约束函数表示为等式或不等式的形式。</p>
<p>如果变量后面的参数是大于或等于零的，则去掉原始变量获得不等式该参数大于或等于零，</p>
<p>如果变量后面的参数是小于或等于零的，则去掉原始变量获得不等式该参数小于或等于零，</p>
<p>如果变量后面的参数是等于零的，则去掉原始变量获得不等式该参数等于零。</p>
<p>同时，目标函数去除Min。</p>
<p>max −b1λ1 − b2λ2 − b3λ3<br>a1λ1 + λ2 − v1 ≥ 0 (14)<br>λ1 + a2λ2 − v2 ≤ 0 (15)<br>λ1 − a3λ3 − v3 = 0 (16)</p>
</li>
<li><p>第七步，如果一开始将求最小值变成了最大值（目标函数乘以-1），则将目标函数再次反转，否则，不做任何步骤（可以整理约束函数），则获得最终结果。</p>
<p>min b1λ1 + b2λ2 + b3λ3<br>a1λ1 + λ2 ≥ v1 (17)<br>λ1 + a2λ2 ≤ v2 (18)<br>λ1 − a3λ3 = v3 (19)</p>
<p>至此，已经获得了原始线性规划的二元线性规划。</p>
<p>​</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Resource:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;S´ebastien Lahaie, How to take the Dual of a Linear Program &lt;a href=&quot;http://www.cs.columbia.edu/coms6998-3/lppri
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.pirrla.cn/2017/03/14/netease/"/>
    <id>http://www.pirrla.cn/2017/03/14/netease/</id>
    <published>2017-03-14T08:47:10.000Z</published>
    <updated>2017-03-14T09:41:20.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>首先根据玩家的在线时间等数据，推测每天每个时段的服务器带宽等资源的压力，并进行及时的调配，避免发生网络拥堵。此外，还可以根据一年中一些特殊的日期进行相应的提前调配（可能数据量会比较少），让玩家拥有良好的游戏体验。</li>
<li>可以通过对玩家的操作进行收集，获取玩家的行为数据，根据这些行为数据和特定的学习数据集，可以推测出该玩家是否是非正常玩家（自动化工作室），从而保护游戏不被非法行为破坏环境。</li>
<li>观察并收集玩家流失的数据，，通过数据挖掘发现流失主要发生在游戏进程的哪一部分，从而可以观察到游戏的进程是否有设计不足，进而去优化改善游戏，降低游戏的玩家流失率。</li>
<li>通过数据挖掘，可以对某一种用户进行标签，然后可以根据不同的标签，对目标用户进行精准的营销，可以提高营销效率。</li>
<li>如果是拥有多款游戏的公司，游戏的部分数据是可以互通的，根据各个游戏的数据，可以规划未来的游戏开发方向，观察市场中某种用户（付费率高的）的规模，并进行偏好分析，从而提高公司的收益。</li>
<li>对于游戏内拥有交易系统的游戏（端游）来说，控制经济系统的稳定是很重要的。而数据挖掘可以通过对经济系统内货币的来源、消耗、交易、存储等的流向进行分析，从而监测经济系统的稳定性，当经济系统出现失控预警时，可以进行及时的调控。</li>
</ol>
<p>我从小就很喜欢玩游戏，碰巧，我接触的第一款正是网易公司的梦幻西游。那时候的我只是一个小学生，没有零用钱充点卡，只能升上十级之后一直不下线，我记得那一晚我都没有睡觉，但是我见识长安城的辽阔壮丽，然后就欠费了。<br>这是我的第一次狂热的游戏体验，由于家里有电脑，所以基本游戏我都接触过。这里还是很感谢我开明的父母，我玩游戏的时候基本是没有多少阻碍的。从此，游戏就在我的生命之中成为了一个重要的组成部分，高考也没有能将我俩分开，在高考前，我在背诵语文古文和玩游戏之间，选择了玩游戏，当然结局没有那么尽如人意，高考发挥并不理想，但是我一点也不后悔。</p>
<ol>
<li>热爱游戏，从小学一年级开始接触游戏，玩过各种各类的游戏</li>
<li>逻辑能力强，熟悉Python，C++等编程语言</li>
<li>熟悉互联网流行文化，微博狂热粉丝，同时懂得Adobe系列软件基本操作</li>
</ol>
<p>首先，我非常热爱游戏，碰巧，我接触的第一款网络游戏正是网易公司的梦幻西游。那时候的我只是一个小学生，没有零用钱充点卡，只能在九级憋经验，升上十级之后一直不下线（无欠费设置），我记得那一晚我都没有睡觉，但是我见识了长安城的辽阔壮丽，那时候我还幻想过一直欠点玩到维护，但是被妈妈无情地关了电源，然后就欠费了。从此，游戏就在我的生命之中成为了一个重要的组成部分，由于从小家里就有电脑，所以基本游戏我都接触过。<br>其次，我非常喜欢钻研游戏的设定和测试游戏的极限数值。比如，我基本把英雄联盟的各个英雄都试过出不同的装备（AP/AD/肉），测试他们的性能，还有测试一些比较有趣的技能。在英雄联盟出练习模式之前，这些测试基本都要1-2个小时的测试时间，但是我都坚持下来了，为的就是看看技能有没有可能有逆天的效果或神奇的事情发生。<br>所以，我希望成为一名游戏测试开发工程师，将我的兴趣爱好与工作相结合。</p>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;首先根据玩家的在线时间等数据，推测每天每个时段的服务器带宽等资源的压力，并进行及时的调配，避免发生网络拥堵。此外，还可以根据一年中一些特殊的日期进行相应的提前调配（可能数据量会比较少），让玩家拥有良好的游戏体验。&lt;/li&gt;
&lt;li&gt;可以通过对玩家的操作进行收集，
    
    </summary>
    
    
  </entry>
  
</feed>
